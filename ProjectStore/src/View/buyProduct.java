/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.GestManegmentDataProductsAndOrders;
import Model.DataProduct;
import Model.DataOrder;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro
 */
public class buyProduct extends javax.swing.JInternalFrame {

    String idProduct;
    String priceProduct;
    String quantityProduct;
    String selectedPeymentMethod;

    /**
     * Creates new form buyProduct
     */
    public buyProduct() {
        initComponents();
        atualizeTable();
        jPanel2.setVisible(false);
    }
    DefaultTableModel Dtn = new DefaultTableModel(
            new Object[][]{},
            new Object[]{"ID", "NAME", "DESCRIPTION", "QUANTITY", "PRICE"});

    public void atualizeTable() {
        try {
            GestManegmentDataProductsAndOrders GMDPA = new GestManegmentDataProductsAndOrders();
            ArrayList<DataProduct> lista = new ArrayList<>();// create null arraylist from model DataContacs
            lista = GMDPA.listProducts();
            // clear table interface
            Dtn.setNumRows(0);
            // for in table to set the results query 
            for (int i = 0; i < lista.size(); i++) {
                Dtn.addRow(
                        new String[]{
                            Integer.toString(lista.get(i).getId_product()),
                            lista.get(i).getNameProduct(),
                            lista.get(i).getDescriptionProduct(),
                            Integer.toString(lista.get(i).getQuantityProduct()),
                            Double.toString(lista.get(i).getPriceProduct())}
                );
            }// for
            tableDataProducts.setModel(Dtn);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR to bild table " + e.getMessage(), "ERROR", 1);
        }
    }// method atualizeTable

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDataProducts = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnBuyProduct = new javax.swing.JButton();
        labelQuantityProduct = new javax.swing.JLabel();
        textQuntityProduct = new javax.swing.JTextField();
        methodsPayment = new javax.swing.JComboBox<>();
        btnselectProduct = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tableDataProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NOME", "TELEFONE ", "EMAIL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableDataProducts);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Action", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18), new java.awt.Color(255, 0, 51))); // NOI18N

        btnBuyProduct.setText("BUY");
        btnBuyProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyProductActionPerformed(evt);
            }
        });

        labelQuantityProduct.setText("Quantity of Product:");

        methodsPayment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "*****", "Débit ", "Crédit", "Pix", "crypto", " " }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(labelQuantityProduct)
                .addGap(18, 18, 18)
                .addComponent(textQuntityProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(methodsPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnBuyProduct)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuyProduct)
                    .addComponent(labelQuantityProduct)
                    .addComponent(textQuntityProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(methodsPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        btnselectProduct.setText("Select");
        btnselectProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnselectProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(264, 264, 264)
                .addComponent(btnselectProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnselectProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnselectProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnselectProductActionPerformed

            int rowSelected = tableDataProducts.getSelectedRow();
            if (rowSelected == -1) {
                JOptionPane.showMessageDialog(null, "Please, select one product to make order");
            } else {
                idProduct = (String) tableDataProducts.getValueAt(rowSelected, 0);
                priceProduct = (String) tableDataProducts.getValueAt(rowSelected, 3);
                quantityProduct = (String) tableDataProducts.getValueAt(rowSelected, 4);
                jPanel2.setVisible(true);
            }
    }//GEN-LAST:event_btnselectProductActionPerformed

    private void btnBuyProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyProductActionPerformed
        try {
            DataProduct DP = new DataProduct();
            DataOrder DO = new DataOrder();
            if (Integer.parseInt(textQuntityProduct.getText()) > Integer.parseInt(quantityProduct)) {
                JOptionPane.showInputDialog(null, " your order is bigger than quantity of this product in Store, please digit a new quantity to buy", "Warming", 1);
            } else {
                double totalOrder = Double.parseDouble(priceProduct) * Double.parseDouble(textQuntityProduct.getText());
                selectedPeymentMethod = (String) methodsPayment.getSelectedItem();
                if (selectedPeymentMethod.equals("*****")) {
                    JOptionPane.showInputDialog(null, "Please selec one option of payment", "Warming", 1);
                } else {
                    DO.setTotalOrder(totalOrder);
                    DO.setPaymentMethod(Integer.parseInt(selectedPeymentMethod));
                    DP.setId_product(Integer.parseInt(idProduct));
                    GestManegmentDataProductsAndOrders GMDPA = new GestManegmentDataProductsAndOrders();
                    GMDPA.insertOrder(DP, DO);
                    JOptionPane.showMessageDialog(null, "ok", "Product Ordered with sucess", 1);
                    atualizeTable();
                }
            }
        } catch (SQLException error) {
            JOptionPane.showMessageDialog(null, "Error in create order in database Error->" + error.getMessage());
        }
    }//GEN-LAST:event_btnBuyProductActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuyProduct;
    private javax.swing.JButton btnselectProduct;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelQuantityProduct;
    private javax.swing.JComboBox<String> methodsPayment;
    private javax.swing.JTable tableDataProducts;
    private javax.swing.JTextField textQuntityProduct;
    // End of variables declaration//GEN-END:variables
}
